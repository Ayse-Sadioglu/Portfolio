"use strict";(self.webpackChunkportfolio=self.webpackChunkportfolio||[]).push([[7217],{7217:(t,e,i)=>{i.d(e,{Emitters:()=>a});var s=i(4409);class a{constructor(t,e){this.container=e,this._engine=t,this.array=[],this.emitters=[],this.interactivityEmitters={random:{count:1,enable:!1},value:[]};e.getEmitter=t=>void 0===t||(0,s.Et)(t)?this.array[null!==t&&void 0!==t?t:0]:this.array.find((e=>e.name===t)),e.addEmitter=async(t,e)=>this.addEmitter(t,e),e.removeEmitter=t=>{const i=e.getEmitter(t);i&&this.removeEmitter(i)},e.playEmitter=t=>{const i=e.getEmitter(t);i&&i.externalPlay()},e.pauseEmitter=t=>{const i=e.getEmitter(t);i&&i.externalPause()}}async addEmitter(t,e){const{Emitter:s}=await Promise.resolve().then(i.bind(i,3381)),{EmitterInstance:a}=await i.e(8033).then(i.bind(i,8033)),r=new s;r.load(t);const n=new a(this._engine,this,this.container,r,e);return await n.init(),this.array.push(n),n}handleClickMode(t){var e;const i=this.emitters,a=this.interactivityEmitters;if("emitter"!==t)return;let r;if(a&&(0,s.cy)(a.value)){const t=0;if(a.value.length>t&&a.random.enable){r=[];const t=[];for(let e=0;e<a.random.count;e++){const i=(0,s.n0)(a.value);t.includes(i)&&t.length<a.value.length?e--:(t.push(i),r.push((0,s.Vh)(a.value,i)))}}else r=a.value}else r=null===a||void 0===a?void 0:a.value;const n=null!==(e=r)&&void 0!==e?e:i,o=this.container.interactivity.mouse.clickPosition;(0,s.wJ)(n,(async t=>{await this.addEmitter(t,o)}))}async init(){if(this.emitters=this.container.actualOptions.emitters,this.interactivityEmitters=this.container.actualOptions.interactivity.modes.emitters,this.emitters)if((0,s.cy)(this.emitters))for(const t of this.emitters)await this.addEmitter(t);else await this.addEmitter(this.emitters)}pause(){for(const t of this.array)t.pause()}play(){for(const t of this.array)t.play()}removeEmitter(t){const e=this.array.indexOf(t);e>=0&&this.array.splice(e,1)}resize(){for(const t of this.array)t.resize()}stop(){this.array=[]}update(t){for(const e of this.array)e.update(t)}}}}]);
//# sourceMappingURL=7217.e84e7917.chunk.js.map