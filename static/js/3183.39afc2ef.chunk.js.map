{"version":3,"file":"static/js/3183.39afc2ef.chunk.js","mappings":"6IAEO,MAAMA,EACTC,WAAAA,CAAYC,GACRC,KAAKD,UAAYA,EACjBC,KAAKC,MAAQ,GACbD,KAAKE,UAAY,GACjBF,KAAKG,uBAAyB,GAC9BJ,EAAUK,YAAeC,QAA4BC,IAAdD,IAA2BE,EAAAA,EAAAA,IAASF,GACrEL,KAAKC,MAAe,OAATI,QAAS,IAATA,EAAAA,EARJ,GASPL,KAAKC,MAAMO,MAAMC,GAAMA,EAAEC,OAASL,IACxCN,EAAUY,YAAcC,MAAOC,EAASC,IAAad,KAAKW,YAAYE,EAASC,EACnF,CACA,iBAAMH,CAAYE,EAASC,GACvB,MAAM,iBAAEC,SAA2B,+BAAiCC,EAAW,IAAID,EAAiBf,KAAMA,KAAKD,UAAWc,EAASC,GAEnI,OADAd,KAAKC,MAAMgB,KAAKD,GACTA,CACX,CACAE,IAAAA,CAAKC,GACD,IAAK,MAAMH,KAAYhB,KAAKC,MACxBe,EAASE,KAAKC,EAEtB,CACAC,eAAAA,CAAgBC,GACZ,MAAMC,EAAkBtB,KAAKE,UAAWqB,EAAgBvB,KAAKG,uBAC7D,GAAa,aAATkB,EAAqB,CACrB,MAAMG,GAAuBC,EAAAA,EAAAA,IAAyBF,GAAgBG,EAAuC,OAApBF,QAAoB,IAApBA,EAAAA,GAAwBC,EAAAA,EAAAA,IAAyBH,GAAkBK,EAAY3B,KAAKD,UAAU6B,cAAcC,MAAMC,cACtM9B,KAAKW,YAAYe,EAAkBC,EAC5C,CACJ,CACA,UAAMI,GACF/B,KAAKE,UAAYF,KAAKD,UAAUiC,cAAc9B,UAC9CF,KAAKG,uBAAyBH,KAAKD,UAAUiC,cAAcJ,cAAcK,MAAM/B,UAC/E,MAAMgC,GAAWC,EAAAA,EAAAA,IAA0BnC,KAAKE,WAAWU,gBACjDZ,KAAKW,YAAYK,EAAS,IAEhCkB,aAAoBE,YACdC,QAAQC,IAAIJ,SAGZA,CAEd,CACAK,cAAAA,CAAeC,GACX,IAAK,MAAMxB,KAAYhB,KAAKC,MAExB,GADAe,EAASyB,QAAQD,GACbA,EAASE,UACT,KAGZ,CACAC,cAAAA,CAAe3B,GACX,MAAM4B,EAAQ5C,KAAKC,MAAM4C,QAAQ7B,GAC7B4B,GApDS,GAqDT5C,KAAKC,MAAM6C,OAAOF,EAFoC,EAI9D,CACAG,MAAAA,GACI,IAAK,MAAM/B,KAAYhB,KAAKC,MACxBe,EAAS+B,QAEjB,CACAC,IAAAA,GACIhD,KAAKC,MAAQ,EACjB,E","sources":["../node_modules/@tsparticles/plugin-absorbers/browser/Absorbers.js"],"sourcesContent":["import { executeOnSingleOrMultiple, isNumber, itemFromSingleOrMultiple, } from \"@tsparticles/engine\";\nconst defaultIndex = 0;\nexport class Absorbers {\n    constructor(container) {\n        this.container = container;\n        this.array = [];\n        this.absorbers = [];\n        this.interactivityAbsorbers = [];\n        container.getAbsorber = (idxOrName) => idxOrName === undefined || isNumber(idxOrName)\n            ? this.array[idxOrName ?? defaultIndex]\n            : this.array.find((t) => t.name === idxOrName);\n        container.addAbsorber = async (options, position) => this.addAbsorber(options, position);\n    }\n    async addAbsorber(options, position) {\n        const { AbsorberInstance } = await import(\"./AbsorberInstance.js\"), absorber = new AbsorberInstance(this, this.container, options, position);\n        this.array.push(absorber);\n        return absorber;\n    }\n    draw(context) {\n        for (const absorber of this.array) {\n            absorber.draw(context);\n        }\n    }\n    handleClickMode(mode) {\n        const absorberOptions = this.absorbers, modeAbsorbers = this.interactivityAbsorbers;\n        if (mode === \"absorber\") {\n            const absorbersModeOptions = itemFromSingleOrMultiple(modeAbsorbers), absorbersOptions = absorbersModeOptions ?? itemFromSingleOrMultiple(absorberOptions), aPosition = this.container.interactivity.mouse.clickPosition;\n            void this.addAbsorber(absorbersOptions, aPosition);\n        }\n    }\n    async init() {\n        this.absorbers = this.container.actualOptions.absorbers;\n        this.interactivityAbsorbers = this.container.actualOptions.interactivity.modes.absorbers;\n        const promises = executeOnSingleOrMultiple(this.absorbers, async (absorber) => {\n            await this.addAbsorber(absorber);\n        });\n        if (promises instanceof Array) {\n            await Promise.all(promises);\n        }\n        else {\n            await promises;\n        }\n    }\n    particleUpdate(particle) {\n        for (const absorber of this.array) {\n            absorber.attract(particle);\n            if (particle.destroyed) {\n                break;\n            }\n        }\n    }\n    removeAbsorber(absorber) {\n        const index = this.array.indexOf(absorber), deleteCount = 1;\n        if (index >= defaultIndex) {\n            this.array.splice(index, deleteCount);\n        }\n    }\n    resize() {\n        for (const absorber of this.array) {\n            absorber.resize();\n        }\n    }\n    stop() {\n        this.array = [];\n    }\n}\n"],"names":["Absorbers","constructor","container","this","array","absorbers","interactivityAbsorbers","getAbsorber","idxOrName","undefined","isNumber","find","t","name","addAbsorber","async","options","position","AbsorberInstance","absorber","push","draw","context","handleClickMode","mode","absorberOptions","modeAbsorbers","absorbersModeOptions","itemFromSingleOrMultiple","absorbersOptions","aPosition","interactivity","mouse","clickPosition","init","actualOptions","modes","promises","executeOnSingleOrMultiple","Array","Promise","all","particleUpdate","particle","attract","destroyed","removeAbsorber","index","indexOf","splice","resize","stop"],"sourceRoot":""}